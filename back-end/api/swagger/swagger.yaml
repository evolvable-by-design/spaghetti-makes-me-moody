swagger: "2.0"
info:
  version: "0.0.1"
  title: spaghetti-back-end
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /analyzeText/:
    # binds a127 app logic to a route
    x-swagger-router-controller: analysis
    post:
      description: Get analysis data and feedback for given text
      consumes:
        - application/json
      operationId: analyzeEntry
      parameters:
        - name: text
          in: body
          description: the text entry to be analyzed
          required: true
          schema:
            $ref: "#/definitions/analyzeEntry"
      responses:
        "200":
          description: Text analysis success
          schema:
            $ref: "#/definitions/entryAnalysis"
        "400":
          description: Error
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /createUser/{userName}/password/{password}:
    # binds a127 app logic to a route
    x-swagger-router-controller: user_ops
    post:
      description: "Create a new user, optionally setting their historyData if\
      some has already been generated"
      consumes:
        - application/json
      # used as the method name of the controller
      operationId: createUser
      parameters:
        - name: userName
          in: path
          description: The desired username
          required: true
          type: string
        - name: password
          in: path
          description: The desired password
          required: true
          type: string
        - name: historyData
          in: body
          description: "A list of history data that the user has already\
          generated before they signed up"
          required: false
          schema:
            type: object
      responses:
        "201":
          description: User creation success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/genericResponse"
        "400":
          description: User name already exists
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /retrieveUser/{userName}/password/{password}:
    # binds a127 app logic to a route
    x-swagger-router-controller: user_ops
    get:
      description: Retrieve an existing user
      # used as the method name of the controller
      operationId: retrieveUser
      parameters:
        - name: userName
          in: path
          description: The existing username
          required: true
          type: string
        - name: password
          in: path
          description: The existing password
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/genericResponse"
        "400":
          description: User name does not exist
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: Password incorrect
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /updateUser/{userName}/password/{password}:
    # binds a127 app logic to a route
    x-swagger-router-controller: user_ops
    post:
      description: "Takes a JSON object in the request body, and adds it to the\
      front of the 'entryList' field. Currently accepts any valid JSON object."
      consumes:
        - application/json
      # used as the method name of the controller
      operationId: updateUser
      parameters:
        - name: userName
          in: path
          description: The needed username
          required: true
          type: string
        - name: password
          in: path
          description: The needed password
          required: true
          type: string
        - name: body
          in: body
          description: Entry to be added
          required: true
          schema:
            type: object
      responses:
        "201":
          description: User updated successfully!
          schema:
            # a pointer to a definition
            $ref: "#/definitions/genericResponse"
        "404":
          description: User not found!
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /deleteEntry/{userName}/password/{password}/entryIndex/{entryIndex}:
    # binds a127 app logic to a route
    x-swagger-router-controller: user_ops
    delete:
      description: Deletes a user entry at given array index
      # used as the method name of the controller
      operationId: deleteEntry
      parameters:
        - name: userName
          in: path
          description: The needed username
          required: true
          type: string
        - name: password
          in: path
          description: The needed password
          required: true
          type: string
        - name: entryIndex
          in: path
          description: Array index of the entry to be deleted
          required: true
          type: integer
      responses:
        "200":
          description: The entry at index was deleted successfully.
          schema:
            # a pointer to a definition
            $ref: "#/definitions/genericResponse"
        "404":
          description: User not found!
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  genericResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  analyzeEntry:
    required:
      - text
    properties:
      text:
        type: string
  entryAnalysis:
    required:
      - message
      - data
    properties:
      message:
        type: string
      data:
        type: object
        properties: 
          date:
            type: string
          entry:
            type: string
          sentimentData:
            type: object
            properties:
              feelingScore:
                type: integer
              feedback:
                type: string
          classificationData:
            type: string